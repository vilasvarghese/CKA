ConfigMaps allow you to decouple configuration artifacts from image content to keep containerized applications portable.

General syntax
kubectl create configmap <name you want> <file/directory - data-source>

Lab1 

# Create the local directory
mkdir -p cka/configmap/
cd cka/configmap/

# Download the sample files into `cka/configmap/` directory
wget https://kubernetes.io/examples/configmap/game.properties -O game.properties
wget https://kubernetes.io/examples/configmap/ui.properties -O ui.properties

curl https://kubernetes.io/examples/configmap/game.properties -o game.properties
curl https://kubernetes.io/examples/configmap/ui.properties -o ui.properties

# Create the configma. This will load both the property files
#Creating config map from a directory
kubectl create configmap game-config --from-file=.

#Creating config map from a file
kubectl create configmap game-config-2 --from-file=./game.properties

#Creating config map from multiple files
kubectl create configmap game-config-2 --from-file=./game.properties --from-file=./ui.properties

Lot more details can be found at
https://kubernetes.io/docs/tasks/cka/configure-pod-configmap/
